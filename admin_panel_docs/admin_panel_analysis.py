#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import json

def analyze_admin_panel():
    """–ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    
    print("üîß –ê–ù–ê–õ–ò–ó –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò")
    print("=" * 50)
    
    issues = []
    warnings = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤...")
    
    required_files = [
        'modules/AdminPanel.js',
        'modules/DataManager.js', 
        'data/config/categories.json',
        'data/config/languages.json'
    ]
    
    for file_path in required_files:
        if not os.path.exists(file_path):
            issues.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file_path}")
        else:
            print(f"   ‚úÖ {file_path}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    
    try:
        with open('data/config/categories.json', 'r', encoding='utf-8') as f:
            categories = json.load(f)
        
        print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        
        for category in categories:
            if 'id' not in category:
                issues.append(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è –±–µ–∑ ID: {category}")
            if 'name' not in category:
                issues.append(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è: {category.get('id', 'unknown')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–π
            if isinstance(category.get('name'), dict):
                langs = list(category['name'].keys())
                print(f"   üåê {category.get('id', 'unknown')}: —è–∑—ã–∫–∏ {langs}")
            else:
                warnings.append(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è {category.get('id', 'unknown')} –∏–º–µ–µ—Ç —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–∑–≤–∞–Ω–∏—è")
                
    except Exception as e:
        issues.append(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è categories.json: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ —Å–ª–æ–≤
    print("\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–ª–æ–≤...")
    
    word_files_found = 0
    languages = ['ru', 'en', 'es', 'fr']
    
    for lang in languages:
        lang_dir = f'data/words/{lang}'
        if os.path.exists(lang_dir):
            files = [f for f in os.listdir(lang_dir) if f.endswith('.txt')]
            word_files_found += len(files)
            print(f"   üî§ {lang}: {len(files)} —Ñ–∞–π–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–æ–≤
            for file in files[:3]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ñ–∞–π–ª–∞
                file_path = os.path.join(lang_dir, file)
                try:
                    with open(file_path, 'r', encoding='utf-8') as f:
                        first_line = f.readline().strip()
                        if not first_line:
                            warnings.append(f"–ü—É—Å—Ç–æ–π —Ñ–∞–π–ª: {file_path}")
                        elif ' - ' not in first_line:
                            warnings.append(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤ {file}: {first_line[:50]}...")
                except Exception as e:
                    issues.append(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {file_path}: {e}")
        else:
            warnings.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {lang_dir}")
    
    print(f"   üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ —Å–ª–æ–≤: {word_files_found}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    print("\nüñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    image_dirs = []
    if os.path.exists('data/images'):
        image_dirs = [d for d in os.listdir('data/images') if os.path.isdir(f'data/images/{d}')]
        print(f"   üìÅ –ù–∞–π–¥–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_dirs)}")
        
        for img_dir in image_dirs:
            img_path = f'data/images/{img_dir}'
            images = [f for f in os.listdir(img_path) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]
            print(f"   üñºÔ∏è {img_dir}: {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
            invalid_names = []
            for img in images[:5]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5
                if not img.split('.')[0].replace('-', '').replace('_', '').isdigit():
                    invalid_names.append(img)
            
            if invalid_names:
                warnings.append(f"–ù–µ–≤–µ—Ä–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ –≤ {img_dir}: {invalid_names}")
    else:
        issues.append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data/images")
    
    # 5. –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ AdminPanel.js
    print("\nüîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ AdminPanel.js...")
    
    try:
        with open('modules/AdminPanel.js', 'r', encoding='utf-8') as f:
            admin_code = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç–æ–¥—ã
        required_methods = [
            'validateCategory',
            'saveCategory', 
            'handleWordsFile',
            'handleImagesFiles',
            'showValidationResult'
        ]
        
        for method in required_methods:
            if method in admin_code:
                print(f"   ‚úÖ –ú–µ—Ç–æ–¥ {method} –Ω–∞–π–¥–µ–Ω")
            else:
                issues.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–µ—Ç–æ–¥: {method}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        event_handlers = [
            'validateButton',
            'saveButton',
            'wordsFile',
            'imagesFiles'
        ]
        
        for handler in event_handlers:
            if f"getElementById('{handler}')" in admin_code:
                print(f"   ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ {handler} –Ω–∞–π–¥–µ–Ω")
            else:
                warnings.append(f"–í–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: {handler}")
                
    except Exception as e:
        issues.append(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ AdminPanel.js: {e}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ DataManager
    print("\nüíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ DataManager...")
    
    try:
        with open('modules/DataManager.js', 'r', encoding='utf-8') as f:
            data_code = f.read()
        
        required_data_methods = [
            'validateWordsFile',
            'validateImages',
            'addCategory',
            'parseWordsFile'
        ]
        
        for method in required_data_methods:
            if method in data_code:
                print(f"   ‚úÖ –ú–µ—Ç–æ–¥ {method} –Ω–∞–π–¥–µ–Ω")
            else:
                issues.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–µ—Ç–æ–¥ –≤ DataManager: {method}")
                
    except Exception as e:
        issues.append(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ DataManager.js: {e}")
    
    # 7. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    print("\n‚ö†Ô∏è –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
    
    potential_issues = [
        "AdminPanel –æ–∂–∏–¥–∞–µ—Ç —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π",
        "–ú–µ—Ç–æ–¥ addCategory –º–æ–∂–µ—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä",
        "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤",
        "–í–∞–ª–∏–¥–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å File –æ–±—ä–µ–∫—Ç–∞–º–∏",
        "–ù–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏"
    ]
    
    for issue in potential_issues:
        warnings.append(issue)
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê")
    print("=" * 50)
    
    if issues:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ ({len(issues)}):")
        for i, issue in enumerate(issues, 1):
            print(f"   {i}. {issue}")
    else:
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    if warnings:
        print(f"\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø ({len(warnings)}):")
        for i, warning in enumerate(warnings, 1):
            print(f"   {i}. {warning}")
    else:
        print("\n‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–µ—Ç")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("   1. –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—É—é —á–∞—Å—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤")
    print("   2. –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–∫—É addCategory –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
    print("   3. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    print("   4. –£–ª—É—á—à–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ñ–∞–π–ª–æ–≤")
    print("   5. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    
    return len(issues) == 0

if __name__ == "__main__":
    success = analyze_admin_panel()
    exit(0 if success else 1) 