// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
class FullDataGenerator {
    constructor() {
        this.countriesData = this.getCountriesData();
        this.footballersData = [];
    }

    // –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –∏ —Å—Ç–æ–ª–∏—Ü (ISO 3166-1)
    getCountriesData() {
        return {
            'AD': '–ê–ù–î–û–†–†–ê-–õ–ê-–í–ï–õ–¨–Ø', 'AE': '–ê–ë–£-–î–ê–ë–ò', 'AF': '–ö–ê–ë–£–õ', 'AG': '–°–ï–ù–¢-–î–ñ–û–ù–°',
            'AI': '–û–°–¢–†–û–í –ê–ù–ì–ò–õ–¨–Ø', 'AL': '–¢–ò–†–ê–ù–ê', 'AM': '–ï–†–ï–í–ê–ù', 'AO': '–õ–£–ê–ù–î–ê',
            'AR': '–ë–£–≠–ù–û–°-–ê–ô–†–ï–°', 'AS': '–ü–ê–ì–û-–ü–ê–ì–û', 'AT': '–í–ï–ù–ê', 'AU': '–ö–ê–ù–ë–ï–†–†–ê',
            'AW': '–û–†–ê–ù–¨–ï–°–¢–ê–î', 'AX': '–ú–ê–†–ò–ï–•–ê–ú–ù', 'AZ': '–ë–ê–ö–£', 'BA': '–°–ê–†–ê–ï–í–û',
            'BB': '–ë–†–ò–î–ñ–¢–ê–£–ù', 'BD': '–î–ê–ö–ö–ê', 'BE': '–ë–†–Æ–°–°–ï–õ–¨', 'BF': '–£–ê–ì–ê–î–£–ì–£',
            'BG': '–°–û–§–ò–Ø', 'BH': '–ú–ê–ù–ê–ú–ê', 'BI': '–ì–ò–¢–ï–ì–ê', 'BJ': '–ü–û–†–¢–û-–ù–û–í–û',
            'BL': '–ì–£–°–¢–ê–í–ò–Ø', 'BM': '–ì–ê–ú–ò–õ–¨–¢–û–ù', 'BN': '–ë–ê–ù–î–ê–†-–°–ï–†–ò-–ë–ï–ì–ê–í–ê–ù', 'BO': '–°–£–ö–†–ï',
            'BQ': '–ö–†–ê–õ–ï–ù–î–ï–ô–ö', 'BR': '–ë–†–ê–ó–ò–õ–ò–ê', 'BS': '–ù–ê–°–°–ê–£', 'BT': '–¢–•–ò–ú–ü–•–£',
            'BV': '–ë–£–í–ï', 'BW': '–ì–ê–ë–û–†–û–ù–ï', 'BY': '–ú–ò–ù–°–ö', 'BZ': '–ë–ï–õ–¨–ú–û–ü–ê–ù',
            'CA': '–û–¢–¢–ê–í–ê', 'CC': '–£–≠–°–¢-–ê–ô–õ–ï–ù–î', 'CD': '–ö–ò–ù–®–ê–°–ê', 'CF': '–ë–ê–ù–ì–ò',
            'CG': '–ë–†–ê–ó–ó–ê–í–ò–õ–¨', 'CH': '–ë–ï–†–ù', 'CI': '–Ø–ú–£–°–£–ö–†–û', 'CK': '–ê–í–ê–†–ê–ú–ê–ù–ì–ê',
            'CL': '–°–ê–ù–¢–¨–Ø–ì–û', 'CM': '–Ø–£–ù–î–ï', 'CN': '–ü–ï–ö–ò–ù', 'CO': '–ë–û–ì–û–¢–ê',
            'CR': '–°–ê–ù-–•–û–°–ï', 'CU': '–ì–ê–í–ê–ù–ê', 'CV': '–ü–†–ê–Ø', 'CW': '–í–ò–õ–õ–ï–ú–°–¢–ê–î',
            'CX': '–§–õ–ê–ô–ò–ù–ì-–§–ò–®-–ö–û–í', 'CY': '–ù–ò–ö–û–°–ò–Ø', 'CZ': '–ü–†–ê–ì–ê', 'DE': '–ë–ï–†–õ–ò–ù',
            'DJ': '–î–ñ–ò–ë–£–¢–ò', 'DK': '–ö–û–ü–ï–ù–ì–ê–ì–ï–ù', 'DM': '–†–û–ó–û', 'DO': '–°–ê–ù–¢–û-–î–û–ú–ò–ù–ì–û',
            'DZ': '–ê–õ–ñ–ò–†', 'EC': '–ö–ò–¢–û', 'EE': '–¢–ê–õ–õ–ò–ù', 'EG': '–ö–ê–ò–†',
            'EH': '–≠–õ–¨-–ê–Æ–ù', 'ER': '–ê–°–ú–≠–†–ê', 'ES': '–ú–ê–î–†–ò–î', 'ET': '–ê–î–î–ò–°-–ê–ë–ï–ë–ê',
            'FI': '–•–ï–õ–¨–°–ò–ù–ö–ò', 'FJ': '–°–£–í–ê', 'FK': '–°–¢–≠–ù–õ–ò', 'FM': '–ü–ê–õ–ò–ö–ò–†',
            'FO': '–¢–û–†–°–•–ê–í–ù', 'FR': '–ü–ê–†–ò–ñ', 'GA': '–õ–ò–ë–†–ï–í–ò–õ–¨', 'GB': '–õ–û–ù–î–û–ù',
            'GD': '–°–ï–ù–¢-–î–ñ–û–†–î–ñ–ï–°', 'GE': '–¢–ë–ò–õ–ò–°–ò', 'GF': '–ö–ê–ô–ï–ù–ù–ê', 'GG': '–°–ï–ù–¢-–ü–ò–¢–ï–†-–ü–û–†–¢',
            'GH': '–ê–ö–ö–†–ê', 'GI': '–ì–ò–ë–†–ê–õ–¢–ê–†', 'GL': '–ù–£–£–ö', 'GM': '–ë–ê–ù–ñ–£–õ',
            'GN': '–ö–û–ù–ê–ö–†–ò', 'GP': '–ë–ê–°–¢–ï–†', 'GQ': '–ú–ê–õ–ê–ë–û', 'GR': '–ê–§–ò–ù–´',
            'GS': '–ö–ò–ù–ì-–≠–î–£–ê–†–î-–ü–û–ô–ù–¢', 'GT': '–ì–í–ê–¢–ï–ú–ê–õ–ê', 'GU': '–•–ê–ì–ê–¢–ù–ê', 'GW': '–ë–ò–°–ê–£',
            'GY': '–î–ñ–û–†–î–ñ–¢–ê–£–ù', 'HK': '–ì–û–ù–ö–û–ù–ì', 'HM': '–•–ï–†–î', 'HN': '–¢–ï–ì–£–°–ò–ì–ê–õ–¨–ü–ê',
            'HR': '–ó–ê–ì–†–ï–ë', 'HT': '–ü–û–†–¢-–û-–ü–†–ï–ù–°', 'HU': '–ë–£–î–ê–ü–ï–®–¢', 'ID': '–î–ñ–ê–ö–ê–†–¢–ê',
            'IE': '–î–£–ë–õ–ò–ù', 'IL': '–ò–ï–†–£–°–ê–õ–ò–ú', 'IM': '–î–£–ì–õ–ê–°', 'IN': '–ù–¨–Æ-–î–ï–õ–ò',
            'IO': '–î–ò–ï–ì–û-–ì–ê–†–°–ò–Ø', 'IQ': '–ë–ê–ì–î–ê–î', 'IR': '–¢–ï–ì–ï–†–ê–ù', 'IS': '–†–ï–ô–ö–¨–Ø–í–ò–ö',
            'IT': '–†–ò–ú', 'JE': '–°–ï–ù–¢-–•–ï–õ–ò–ï–†', 'JM': '–ö–ò–ù–ì–°–¢–û–ù', 'JO': '–ê–ú–ú–ê–ù',
            'JP': '–¢–û–ö–ò–û', 'KE': '–ù–ê–ô–†–û–ë–ò', 'KG': '–ë–ò–®–ö–ï–ö', 'KH': '–ü–ù–û–ú–ü–ï–ù–¨',
            'KI': '–¢–ê–†–ê–í–ê', 'KM': '–ú–û–†–û–ù–ò', 'KN': '–ë–ê–°–¢–ï–†', 'KP': '–ü–•–ï–ù–¨–Ø–ù',
            'KR': '–°–ï–£–õ', 'KW': '–≠–õ–¨–ö–£–í–ï–ô–¢', 'KY': '–î–ñ–û–†–î–ñ–¢–ê–£–ù', 'KZ': '–ê–°–¢–ê–ù–ê',
            'LA': '–í–¨–ï–ù–¢–¨–Ø–ù', 'LB': '–ë–ï–ô–†–£–¢', 'LC': '–ö–ê–°–¢–†–ò', 'LI': '–í–ê–î–£–¶',
            'LK': '–ö–û–õ–û–ú–ë–û', 'LR': '–ú–û–ù–†–û–í–ò–Ø', 'LS': '–ú–ê–°–ï–†–£', 'LT': '–í–ò–õ–¨–ù–Æ–°',
            'LU': '–õ–Æ–ö–°–ï–ú–ë–£–†–ì', 'LV': '–†–ò–ì–ê', 'LY': '–¢–†–ò–ü–û–õ–ò', 'MA': '–†–ê–ë–ê–¢',
            'MC': '–ú–û–ù–ê–ö–û', 'MD': '–ö–ò–®–ò–ù–ï–í', 'ME': '–ü–û–î–ì–û–†–ò–¶–ê', 'MF': '–ú–ê–†–ò–ì–û',
            'MG': '–ê–ù–¢–ê–ù–ê–ù–ê–†–ò–í–£', 'MH': '–ú–ê–î–ñ–£–†–û', 'MK': '–°–ö–û–ü–¨–ï', 'ML': '–ë–ê–ú–ê–ö–û',
            'MM': '–ù–ï–ô–ü–¨–ò–î–û', 'MN': '–£–õ–ê–ù-–ë–ê–¢–û–†', 'MO': '–ú–ê–ö–ê–û', 'MP': '–°–ê–ô–ü–ê–ù',
            'MQ': '–§–û–†-–î–ï-–§–†–ê–ù–°', 'MR': '–ù–£–ê–ö–®–û–¢', 'MS': '–ü–õ–ò–ú–£–¢', 'MT': '–í–ê–õ–õ–ï–¢–¢–ê',
            'MU': '–ü–û–†–¢-–õ–£–ò', 'MV': '–ú–ê–õ–ï', 'MW': '–õ–ò–õ–û–ù–ì–í–ï', 'MX': '–ú–ï–•–ò–ö–û',
            'MY': '–ö–£–ê–õ–ê-–õ–£–ú–ü–£–†', 'MZ': '–ú–ê–ü–£–¢–£', 'NA': '–í–ò–ù–î–•–£–ö', 'NC': '–ù–£–ú–ï–ê',
            'NE': '–ù–ò–ê–ú–ï–ô', 'NF': '–ö–ò–ù–ì–°–¢–û–ù', 'NG': '–ê–ë–£–î–ñ–ê', 'NI': '–ú–ê–ù–ê–ì–£–ê',
            'NL': '–ê–ú–°–¢–ï–†–î–ê–ú', 'NO': '–û–°–õ–û', 'NP': '–ö–ê–¢–ú–ê–ù–î–£', 'NR': '–Ø–†–ï–ù',
            'NU': '–ê–õ–û–§–ò', 'NZ': '–í–ï–õ–õ–ò–ù–ì–¢–û–ù', 'OM': '–ú–ê–°–ö–ê–¢', 'PA': '–ü–ê–ù–ê–ú–ê',
            'PE': '–õ–ò–ú–ê', 'PF': '–ü–ê–ü–ï–≠–¢–ï', 'PG': '–ü–û–†–¢-–ú–û–†–°–ë–ò', 'PH': '–ú–ê–ù–ò–õ–ê',
            'PK': '–ò–°–õ–ê–ú–ê–ë–ê–î', 'PL': '–í–ê–†–®–ê–í–ê', 'PM': '–°–ï–ù-–ü–¨–ï–†', 'PN': '–ê–î–ê–ú–°–¢–ê–£–ù',
            'PR': '–°–ê–ù-–•–£–ê–ù', 'PS': '–†–ê–ú–ê–õ–õ–ê', 'PT': '–õ–ò–°–°–ê–ë–û–ù', 'PW': '–ù–ì–ï–†–£–õ–ú–£–î',
            'PY': '–ê–°–£–ù–°–¨–û–ù', 'QA': '–î–û–•–ê', 'RE': '–°–ê–ù-–î–ï–ù–ò', 'RO': '–ë–£–•–ê–†–ï–°–¢',
            'RS': '–ë–ï–õ–ì–†–ê–î', 'RU': '–ú–û–°–ö–í–ê', 'RW': '–ö–ò–ì–ê–õ–ò', 'SA': '–≠–†-–†–ò–Ø–î',
            'SB': '–•–û–ù–ò–ê–†–ê', 'SC': '–í–ò–ö–¢–û–†–ò–Ø', 'SD': '–•–ê–†–¢–£–ú', 'SE': '–°–¢–û–ö–ì–û–õ–¨–ú',
            'SG': '–°–ò–ù–ì–ê–ü–£–†', 'SH': '–î–ñ–ï–ô–ú–°–¢–ê–£–ù', 'SI': '–õ–Æ–ë–õ–Ø–ù–ê', 'SJ': '–õ–û–ù–ì–¨–ò–†',
            'SK': '–ë–†–ê–¢–ò–°–õ–ê–í–ê', 'SL': '–§–†–ò–¢–ê–£–ù', 'SM': '–°–ê–ù-–ú–ê–†–ò–ù–û', 'SN': '–î–ê–ö–ê–†',
            'SO': '–ú–û–ì–ê–î–ò–®–û', 'SR': '–ü–ê–†–ê–ú–ê–†–ò–ë–û', 'SS': '–î–ñ–£–ë–ê', 'ST': '–°–ê–ù-–¢–û–ú–ï',
            'SV': '–°–ê–ù-–°–ê–õ–¨–í–ê–î–û–†', 'SX': '–§–ò–õ–ò–ü–°–ë–£–†–ì', 'SY': '–î–ê–ú–ê–°–ö', 'SZ': '–ú–ë–ê–ë–ê–ù–ï',
            'TC': '–ö–û–ë–ï–†–ù-–¢–ê–£–ù', 'TD': '–ù–î–ñ–ê–ú–ï–ù–ê', 'TF': '–ü–û–†–¢-–û-–§–†–ê–ù–°–ï', 'TG': '–õ–û–ú–ï',
            'TH': '–ë–ê–ù–ì–ö–û–ö', 'TJ': '–î–£–®–ê–ù–ë–ï', 'TK': '–ù–£–ö–£–ê–õ–û–§–ê', 'TL': '–î–ò–õ–ò',
            'TM': '–ê–®–•–ê–ë–ê–î', 'TN': '–¢–£–ù–ò–°', 'TO': '–ù–£–ö–£–ê–õ–û–§–ê', 'TR': '–ê–ù–ö–ê–†–ê',
            'TT': '–ü–û–†–¢-–û–§-–°–ü–ï–ô–ù', 'TV': '–§–£–ù–ê–§–£–¢–ò', 'TW': '–¢–ê–ô–ë–≠–ô', 'TZ': '–î–û–î–û–ú–ê',
            'UA': '–ö–ò–ï–í', 'UG': '–ö–ê–ú–ü–ê–õ–ê', 'UM': '–ê–¢–û–õ–õ', 'US': '–í–ê–®–ò–ù–ì–¢–û–ù',
            'UY': '–ú–û–ù–¢–ï–í–ò–î–ï–û', 'UZ': '–¢–ê–®–ö–ï–ù–¢', 'VA': '–í–ê–¢–ò–ö–ê–ù', 'VC': '–ö–ò–ù–ì–°–¢–ê–£–ù',
            'VE': '–ö–ê–†–ê–ö–ê–°', 'VG': '–†–û–£–î-–¢–ê–£–ù', 'VI': '–®–ê–†–õ–û–¢–¢–ê-–ê–ú–ê–õ–ò–Ø', 'VN': '–•–ê–ù–û–ô',
            'VU': '–ü–û–†–¢-–í–ò–õ–ê', 'WF': '–ú–ê–¢–ê-–£–¢–£', 'WS': '–ê–ü–ò–ê', 'YE': '–°–ê–ù–ê',
            'YT': '–ú–ê–ú–£–î–ó–£', 'ZA': '–ö–ï–ô–ü–¢–ê–£–ù', 'ZM': '–õ–£–°–ê–ö–ê', 'ZW': '–•–ê–†–ê–†–ï'
        };
    }

    async generateCapitalsFile() {
        console.log('üèõÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å—Ç–æ–ª–∏—Ü...');
        
        const availableCodes = [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –∫–æ–¥—ã —Å—Ç—Ä–∞–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        for (const [code, capital] of Object.entries(this.countriesData)) {
            try {
                const response = await fetch(`/data/images/capitals/${code}.png`, { method: 'HEAD' });
                if (response.ok) {
                    availableCodes.push({ code, capital });
                    console.log(`‚úÖ ${code} -> ${capital}`);
                } else {
                    console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${code}.png`);
                }
            } catch (error) {
                console.log(`üí• –û—à–∏–±–∫–∞: ${code}.png`);
            }
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        const fileContent = availableCodes
            .sort((a, b) => a.code.localeCompare(b.code))
            .map((item, index) => `${index + 1} - ${item.capital} - ${item.code}`)
            .join('\n');
        
        console.log(`\nüìä –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å—Ç–æ–ª–∏—Ü: ${availableCodes.length}`);
        console.log('\nüìÑ –°–û–î–ï–†–ñ–ò–ú–û–ï –§–ê–ô–õ–ê capitals.txt:');
        console.log('=' .repeat(50));
        console.log(fileContent);
        console.log('=' .repeat(50));
        
        return fileContent;
    }

    extractPlayerName(filename) {
        // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .png
        let name = filename.replace('.png', '');
        
        // –£–±–∏—Ä–∞–µ–º –Ω–æ–º–µ—Ä –≤ –∫–æ–Ω—Ü–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä -1923, -257)
        name = name.replace(/-\d+$/, '');
        
        // –£–±–∏—Ä–∞–µ–º –æ–¥–Ω–æ—Å–∏–º–≤–æ–ª—å–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã –≤ –Ω–∞—á–∞–ª–µ (–ê, –ë, –ú, –ò, –ó, etc.)
        if (name.match(/^[–ê-–Ø]\s/)) {
            name = name.substring(2); // –£–±–∏—Ä–∞–µ–º "–ê " –∏–ª–∏ "–ë " etc.
        }
        
        return name.trim();
    }

    async scanFootballersDirectory() {
        console.log('‚öΩ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤
        let allFiles = [];
        try {
            const response = await fetch('/footballers_files_list.js');
            if (response.ok) {
                const jsContent = await response.text();
                // –ò–∑–≤–ª–µ–∫–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ JavaScript —Ñ–∞–π–ª–∞
                const match = jsContent.match(/const allFootballerFiles = \[([\s\S]*?)\];/);
                if (match) {
                    const arrayContent = match[1];
                    allFiles = arrayContent
                        .split('\n')
                        .map(line => line.trim())
                        .filter(line => line.startsWith("'") && line.endsWith("',") || line.endsWith("'"))
                        .map(line => line.replace(/^'|'[,]?$/g, ''));
                    
                    console.log(`üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω —Å–ø–∏—Å–æ–∫ –∏–∑ —Ñ–∞–π–ª–∞: ${allFiles.length} —Ñ–∞–π–ª–æ–≤`);
                }
            }
        } catch (error) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å–ø–∏—Å–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä');
        }
        
        // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä
        if (allFiles.length === 0) {
            allFiles = [
                '–ê –ë–ê–ò–†–ê–ú–ò-257.png', '–ê –ö–•–ê–õ–ê–ò–õ–ò-1874.png', '–ë –ó–û–£–ö–†–û–£-1902.png',
                '–ö–†–ò–° –ë–ï–î–ò–ê-1921.png', '–ñ–û–≠–õ–¨ –ú–û–ù–¢–ï–ò–†–£-1923.png', '–ù–ò–ö–û–õ–ê–° –ì–û–ù–°–ê–õ–ï–°-915.png',
                '–ú –°–ï–ò–õ–ï–†-1909.png', '–ò –î–ï–ú–ê-1917.png', '–ó –ê–¢–•–ï–ö–ê–ú–ï-1907.png',
                '–ê–õ–ê–ù –í–ò–†–ñ–ò–ù–ò–£–°-1920.png', '–≠–ë–†–ò–ú–ê –ö–û–õ–õ–ò-1919.png'
            ];
            console.log(`üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä: ${allFiles.length} —Ñ–∞–π–ª–æ–≤`);
        }
        
        const footballers = [];
        
        console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ ${allFiles.length} —Ñ–∞–π–ª–æ–≤...`);
        
        for (let i = 0; i < allFiles.length; i++) {
            const filename = allFiles[i];
            const playerName = this.extractPlayerName(filename);
            const imageCode = filename.replace('.png', '');
            
            footballers.push({
                id: i + 1,
                name: playerName,
                imageCode: imageCode,
                filename: filename
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 100 —Ñ–∞–π–ª–æ–≤
            if ((i + 1) % 100 === 0) {
                console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${i + 1}/${allFiles.length}`);
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
            if (i < 10) {
                console.log(`‚öΩ ${i + 1}: ${playerName} -> ${imageCode}`);
            }
        }
        
        return footballers;
    }

    async generateFootballersFile() {
        console.log('‚öΩ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤...');
        
        const footballers = await this.scanFootballersDirectory();
        
        const fileContent = footballers
            .map(player => `${player.id} - ${player.name} - ${player.imageCode}`)
            .join('\n');
        
        console.log(`\nüìä –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤: ${footballers.length}`);
        console.log('\nüìÑ –°–û–î–ï–†–ñ–ò–ú–û–ï –§–ê–ô–õ–ê footballers.txt:');
        console.log('=' .repeat(50));
        console.log(fileContent);
        console.log('=' .repeat(50));
        
        return fileContent;
    }

    async generateAllFiles() {
        console.log('üöÄ === –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–û–õ–ù–´–• –§–ê–ô–õ–û–í –î–ê–ù–ù–´–• ===\n');
        
        const capitalsContent = await this.generateCapitalsFile();
        console.log('\n' + '='.repeat(80) + '\n');
        const footballersContent = await this.generateFootballersFile();
        
        console.log('\nüéØ === –ò–¢–û–ì–û ===');
        console.log('üìç –°—Ç–æ–ª–∏—Ü—ã: –≥–æ—Ç–æ–≤ —Ñ–∞–π–ª —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø–∏—Å–µ–π');
        console.log('‚öΩ –§—É—Ç–±–æ–ª–∏—Å—Ç—ã: —Å–æ–∑–¥–∞–Ω —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ñ–∞–π–ª (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ)');
        console.log('\nüí° –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ data/words/ru/');
        
        return {
            capitals: capitalsContent,
            footballers: footballersContent
        };
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.generateAllData = async function() {
    const generator = new FullDataGenerator();
    await generator.generateAllFiles();
};

window.generateCapitalsOnly = async function() {
    const generator = new FullDataGenerator();
    await generator.generateCapitalsFile();
};

window.generateFootballersOnly = async function() {
    const generator = new FullDataGenerator();
    await generator.generateFootballersFile();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
window.createFullDataFiles = async function() {
    console.log('üíæ === –°–û–ó–î–ê–ù–ò–ï –ì–û–¢–û–í–´–• –§–ê–ô–õ–û–í –î–ê–ù–ù–´–• ===\n');
    
    const generator = new FullDataGenerator();
    const results = await generator.generateAllFiles();
    
    console.log('\n' + '='.repeat(100));
    console.log('üìÑ –ì–û–¢–û–í–´–ï –§–ê–ô–õ–´ –î–õ–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('='.repeat(100));
    
    // –°–æ–∑–¥–∞–µ–º downloadable links (—ç–º—É–ª—è—Ü–∏—è)
    console.log('\nüéØ –î–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã:');
    console.log('\n1Ô∏è‚É£ –§–∞–π–ª data/words/ru/capitals.txt');
    console.log('2Ô∏è‚É£ –§–∞–π–ª data/words/ru/footballers.txt');
    console.log('\nüìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ –≤ –∫–æ–Ω—Å–æ–ª–∏');
    
    return results;
};

window.addEventListener('load', () => {
    console.log('üõ†Ô∏è –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
    console.log('- generateAllData() - –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤');
    console.log('- generateCapitalsOnly() - —Ç–æ–ª—å–∫–æ —Å—Ç–æ–ª–∏—Ü—ã');
    console.log('- generateFootballersOnly() - —Ç–æ–ª—å–∫–æ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç—ã');
    console.log('- createFullDataFiles() - —Å–æ–∑–¥–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã');
}); 