// –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–π –º–µ–∂–¥—É –¥–∞–Ω–Ω—ã–º–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
class FullImageAnalysis {
    constructor() {
        this.stats = {
            capitals: {
                totalImages: 0,
                totalData: 0,
                matched: 0,
                unmatched: []
            },
            footballers: {
                totalImages: 0,
                totalData: 0,
                matched: 0,
                unmatched: []
            }
        };
    }

    async runFullAnalysis() {
        console.log('üîç === –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –°–û–ü–û–°–¢–ê–í–õ–ï–ù–ò–ô ===');
        
        await this.analyzeCapitals();
        await this.analyzeFootballers();
        
        this.displayFullResults();
    }

    async analyzeCapitals() {
        console.log('\nüìç –ê–ù–ê–õ–ò–ó –°–¢–û–õ–ò–¶:');
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–¥—ã —Å—Ç—Ä–∞–Ω –∏–∑ –Ω–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        try {
            const response = await fetch('/data/words/ru/capitals.txt');
            const text = await response.text();
            const dataLines = text.trim().split('\n');
            
            console.log(`üìä –í —Ñ–∞–π–ª–µ –¥–∞–Ω–Ω—ã—Ö: ${dataLines.length} –∑–∞–ø–∏—Å–µ–π`);
            this.stats.capitals.totalData = dataLines.length;
            
            // –ü–∞—Ä—Å–∏–º –∫–æ–¥—ã —Å—Ç—Ä–∞–Ω
            const countryCodes = dataLines.map(line => {
                const match = line.match(/^(\d+)\s*-\s*(.+?)\s*-\s*([A-Z]{2})$/);
                if (match) {
                    return {
                        number: parseInt(match[1]),
                        capital: match[2].trim(),
                        code: match[3].trim()
                    };
                }
                return null;
            }).filter(item => item !== null);
            
            console.log(`‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: ${countryCodes.length} –∫–æ–¥–æ–≤ —Å—Ç—Ä–∞–Ω`);
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–¥–æ–≤ —Å—Ç—Ä–∞–Ω (255 –∫–∞–∫ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            const allPossibleCodes = this.generateAllCountryCodes();
            console.log(`üåç –í—Å–µ–≥–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–¥–æ–≤ —Å—Ç—Ä–∞–Ω: ${allPossibleCodes.length}`);
            this.stats.capitals.totalImages = allPossibleCodes.length;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –∫–æ–¥—ã —É –Ω–∞—Å –µ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö
            const usedCodes = countryCodes.map(item => item.code);
            const unusedCodes = allPossibleCodes.filter(code => !usedCodes.includes(code));
            
            console.log(`üìà –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–¥–æ–≤: ${usedCodes.length}`);
            console.log(`üìâ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–¥–æ–≤: ${unusedCodes.length}`);
            
            this.stats.capitals.matched = usedCodes.length;
            this.stats.capitals.unmatched = unusedCodes;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–¥–æ–≤
            let foundImages = 0;
            for (const country of countryCodes) {
                try {
                    const response = await fetch(`/data/images/capitals/${country.code}.png`, { method: 'HEAD' });
                    if (response.ok) {
                        foundImages++;
                        console.log(`‚úÖ ${country.code}.png - ${country.capital}`);
                    } else {
                        console.warn(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${country.code}.png –¥–ª—è ${country.capital}`);
                    }
                } catch (error) {
                    console.error(`üí• –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ${country.code}.png:`, error.message);
                }
            }
            
            console.log(`üñºÔ∏è –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${foundImages}/${countryCodes.length}`);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–æ–ª–∏—Ü:', error);
        }
    }

    async analyzeFootballers() {
        console.log('\n‚öΩ –ê–ù–ê–õ–ò–ó –§–£–¢–ë–û–õ–ò–°–¢–û–í:');
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤
        try {
            const response = await fetch('/data/words/ru/footballers.txt');
            const text = await response.text();
            const dataLines = text.trim().split('\n');
            
            console.log(`üìä –í —Ñ–∞–π–ª–µ –¥–∞–Ω–Ω—ã—Ö: ${dataLines.length} –∑–∞–ø–∏—Å–µ–π`);
            this.stats.footballers.totalData = dataLines.length;
            
            // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤
            const footballers = dataLines.map(line => {
                const match = line.match(/^(\d+)\s*-\s*(.+?)\s*-\s*(.+)$/);
                if (match) {
                    return {
                        number: parseInt(match[1]),
                        name: match[2].trim(),
                        imageCode: match[3].trim()
                    };
                }
                return null;
            }).filter(item => item !== null);
            
            console.log(`‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: ${footballers.length} —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤`);
            
            // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª 1923)
            this.stats.footballers.totalImages = 1923;
            console.log(`üñºÔ∏è –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ: 1923`);
            console.log(`üìä –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω—ã—Ö: ${footballers.length}`);
            console.log(`üìâ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: ${1923 - footballers.length}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤
            let foundImages = 0;
            let missingImages = [];
            
            for (const footballer of footballers) {
                try {
                    const encodedImageCode = encodeURIComponent(`${footballer.imageCode}.png`);
                    const response = await fetch(`/data/images/footballers/${encodedImageCode}`, { method: 'HEAD' });
                    if (response.ok) {
                        foundImages++;
                        console.log(`‚úÖ ${footballer.imageCode}.png - ${footballer.name}`);
                    } else {
                        missingImages.push(footballer);
                        console.warn(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${footballer.imageCode}.png –¥–ª—è ${footballer.name}`);
                    }
                } catch (error) {
                    missingImages.push(footballer);
                    console.error(`üí• –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ${footballer.imageCode}.png:`, error.message);
                }
            }
            
            console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${foundImages}/${footballers.length}`);
            this.stats.footballers.matched = foundImages;
            this.stats.footballers.unmatched = missingImages.map(f => f.imageCode);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤:', error);
        }
    }

    generateAllCountryCodes() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥–≤—É—Ö–±—É–∫–≤–µ–Ω–Ω—ã–µ –∫–æ–¥—ã —Å—Ç—Ä–∞–Ω (ISO 3166-1)
        const codes = [];
        for (let i = 65; i <= 90; i++) { // A-Z
            for (let j = 65; j <= 90; j++) { // A-Z
                codes.push(String.fromCharCode(i) + String.fromCharCode(j));
            }
        }
        return codes.slice(0, 255); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 255 –∫–∞–∫ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    }

    displayFullResults() {
        console.log('\nüìä === –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===');
        
        console.log('\nüìç –°–¢–û–õ–ò–¶–´:');
        console.log(`üñºÔ∏è –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ: ${this.stats.capitals.totalImages}`);
        console.log(`üìÑ –ó–∞–ø–∏—Å–µ–π –≤ –¥–∞–Ω–Ω—ã—Ö: ${this.stats.capitals.totalData}`);
        console.log(`‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: ${this.stats.capitals.matched}`);
        console.log(`‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${this.stats.capitals.totalImages - this.stats.capitals.matched}`);
        console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ${((this.stats.capitals.matched / this.stats.capitals.totalImages) * 100).toFixed(1)}%`);
        
        console.log('\n‚öΩ –§–£–¢–ë–û–õ–ò–°–¢–´:');
        console.log(`üñºÔ∏è –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ: ${this.stats.footballers.totalImages}`);
        console.log(`üìÑ –ó–∞–ø–∏—Å–µ–π –≤ –¥–∞–Ω–Ω—ã—Ö: ${this.stats.footballers.totalData}`);
        console.log(`‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: ${this.stats.footballers.matched}`);
        console.log(`‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${this.stats.footballers.totalImages - this.stats.footballers.matched}`);
        console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ${((this.stats.footballers.matched / this.stats.footballers.totalImages) * 100).toFixed(1)}%`);
        
        console.log('\nüîß === –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===');
        
        if (this.stats.capitals.matched < this.stats.capitals.totalImages) {
            console.log(`üìç –î–ª—è —Å—Ç–æ–ª–∏—Ü: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ ${this.stats.capitals.totalImages - this.stats.capitals.matched} –∑–∞–ø–∏—Å–µ–π`);
        }
        
        if (this.stats.footballers.matched < this.stats.footballers.totalImages) {
            console.log(`‚öΩ –î–ª—è —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ ${this.stats.footballers.totalImages - this.stats.footballers.matched} –∑–∞–ø–∏—Å–µ–π`);
        }
        
        console.log('\nüí° === –õ–û–ì–ò–ö–ê –°–û–ü–û–°–¢–ê–í–õ–ï–ù–ò–Ø ===');
        console.log('üìç –°—Ç–æ–ª–∏—Ü—ã: –Ω–∞–∑–≤–∞–Ω–∏–µ_—Å—Ç–æ–ª–∏—Ü—ã -> –ö–û–î_–°–¢–†–ê–ù–´.png');
        console.log('   –ü—Ä–∏–º–µ—Ä: –ê–ù–î–û–†–†–ê-–õ–ê-–í–ï–õ–¨–Ø -> AD.png');
        console.log('‚öΩ –§—É—Ç–±–æ–ª–∏—Å—Ç—ã: –∏–º—è_–∏–≥—Ä–æ–∫–∞ -> –ü–û–õ–ù–û–ï_–ò–ú–Ø_–§–ê–ô–õ–ê.png');
        console.log('   –ü—Ä–∏–º–µ—Ä: –ë–ê–ò–†–ê–ú–ò -> –ê –ë–ê–ò–†–ê–ú–ò-257.png');
        console.log('   –§–æ—Ä–º–∞—Ç—ã –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤: –ø—Ä–µ—Ñ–∏–∫—Å + —Ñ–∞–º–∏–ª–∏—è + –Ω–æ–º–µ—Ä');
    }

    async exploreFootballerImages() {
        console.log('\nüîç === –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –§–£–¢–ë–û–õ–ò–°–¢–û–í ===');
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
        const knownImages = [
            '–ê –ë–ê–ò–†–ê–ú–ò-257.png',
            '–ê –ö–•–ê–õ–ê–ò–õ–ò-1874.png',
            '–ë –ó–û–£–ö–†–û–£-1902.png',
            '–ú –°–ï–ò–õ–ï–†-1909.png',
            '–ö–†–ò–° –ë–ï–î–ò–ê-1921.png',
            '–ñ–û–≠–õ–¨ –ú–û–ù–¢–ï–ò–†–£-1923.png',
            '–ù–ò–ö–û–õ–ê–° –ì–û–ù–°–ê–õ–ï–°-915.png'
        ];
        
        console.log('üìã –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤:');
        console.log('1. –û–¥–Ω–æ—Å–∏–º–≤–æ–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å: –ê, –ë, –ú, –ò, –ó, –¶, –õ, –ù, –•, –û, –§, –î, –ö');
        console.log('2. –ü–æ–ª–Ω—ã–µ –∏–º–µ–Ω–∞ –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞: –ö–†–ò–° –ë–ï–î–ò–ê, –ñ–û–≠–õ–¨ –ú–û–ù–¢–ï–ò–†–£');
        console.log('3. –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞: 257, 1874, 1902, 915, 1921, 1923');
        
        knownImages.forEach(imageName => {
            console.log(`üîç ${imageName}`);
        });
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
window.runFullAnalysis = async function() {
    const analyzer = new FullImageAnalysis();
    await analyzer.runFullAnalysis();
    await analyzer.exploreFootballerImages();
};

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('load', () => {
    console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ runFullAnalysis() –¥–ª—è –∑–∞–ø—É—Å–∫–∞.');
}); 